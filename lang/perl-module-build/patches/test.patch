From 0ff5eb62f95f023f1a808baa8e22d42e58f674ef Mon Sep 17 00:00:00 2001
From: esaaprillia <esaapriliasalsabila@gmail.com>
Date: Thu, 21 Aug 2025 02:25:34 +0800
Subject: [PATCH] Update Makefile.PL

---
 Makefile.PL | 39 +++++++++++++++++++++++++++++----------
 1 file changed, 29 insertions(+), 10 deletions(-)

diff --git a/Makefile.PL b/Makefile.PL
index 0a94ca3..3fa292c 100644
--- a/Makefile.PL
+++ b/Makefile.PL
@@ -1,16 +1,35 @@
-# This Makefile.PL creates a pass-through Makefile that simply calls
-# the equivalent Module::Build methods for each make target.  See the
-# documentation for Module::Build::Compat for more information.
+# Note: this file was auto-generated by Module::Build::Compat version 0.3800
+require 5.006;
 
-use 5.006001;
+    unless (eval "use Module::Build::Compat 0.02; 1" ) {
+      print "This module requires Module::Build to install itself.\n";
 
+      require ExtUtils::MakeMaker;
+      my $yn = ExtUtils::MakeMaker::prompt
+	('  Install Module::Build now from CPAN?', 'y');
 
-use lib qw(lib);
+      unless ($yn =~ /^y/i) {
+	die " *** Cannot install without Module::Build.  Exiting ...\n";
+      }
 
-# bootstrap configure_requires prereqs
-BEGIN { do './inc/bootstrap.pl' or die defined($@) ? $@ : $! }
+      require Cwd;
+      require File::Spec;
+      require CPAN;
 
-use Module::Build::Compat;
+      # Save this 'cause CPAN will chdir all over the place.
+      my $cwd = Cwd::cwd();
 
-Module::Build::Compat->run_build_pl(args => \@ARGV);
-Module::Build::Compat->write_makefile(build_class => 'Module::Build');
+      CPAN::Shell->install('Module::Build::Compat');
+      CPAN::Shell->expand("Module", "Module::Build::Compat")->uptodate
+	or die "Couldn't install Module::Build, giving up.\n";
+
+      chdir $cwd or die "Cannot chdir() back to $cwd: $!";
+    }
+    eval "use Module::Build::Compat 0.02; 1" or die $@;
+    
+    Module::Build::Compat->run_build_pl(args => \@ARGV);
+    my $build_script = 'Build';
+    $build_script .= '.com' if $^O eq 'VMS';
+    exit(0) unless(-e $build_script); # cpantesters convention
+    require Module::Build;
+    Module::Build::Compat->write_makefile(build_class => 'Module::Build');
