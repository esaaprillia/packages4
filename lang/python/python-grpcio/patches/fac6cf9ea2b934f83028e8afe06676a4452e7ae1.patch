From fac6cf9ea2b934f83028e8afe06676a4452e7ae1 Mon Sep 17 00:00:00 2001
From: Matthew Stevenson <mattstev@google.com>
Date: Thu, 8 Feb 2024 11:41:22 -0800
Subject: [PATCH] Remove initial batch of TSI_OPENSSL_ALPN_SUPPORT macro.

---
 src/core/tsi/ssl_transport_security.cc            | 15 ---------------
 test/core/security/security_connector_test.cc     |  8 --------
 2 files changed, 23 deletions(-)

diff --git a/src/core/lib/security/security_connector/ssl_utils.cc b/src/core/lib/security/security_connector/ssl_utils.cc
index b0b907ac503d1..fb5acf31d6dc5 100644
--- a/src/core/lib/security/security_connector/ssl_utils.cc
+++ b/src/core/lib/security/security_connector/ssl_utils.cc
@@ -62,10 +62,6 @@ static const char* installed_roots_path =
 static const char* installed_roots_path = "/usr/share/grpc/roots.pem";
 #endif
 
-#ifndef TSI_OPENSSL_ALPN_SUPPORT
-#define TSI_OPENSSL_ALPN_SUPPORT 1
-#endif
-
 // -- Overridden default roots. --
 
 static grpc_ssl_roots_override_callback ssl_roots_override_cb = nullptr;
@@ -128,7 +124,6 @@ tsi_tls_version grpc_get_tsi_tls_version(grpc_tls_version tls_version) {
 }
 
 grpc_error_handle grpc_ssl_check_alpn(const tsi_peer* peer) {
-#if TSI_OPENSSL_ALPN_SUPPORT
   // Check the ALPN if ALPN is supported.
   const tsi_peer_property* p =
       tsi_peer_get_property_by_name(peer, TSI_SSL_ALPN_SELECTED_PROTOCOL);
@@ -139,7 +134,6 @@ grpc_error_handle grpc_ssl_check_alpn(const tsi_peer* peer) {
   if (!grpc_chttp2_is_alpn_version_supported(p->value.data, p->value.length)) {
     return GRPC_ERROR_CREATE("Cannot check peer: invalid ALPN value.");
   }
-#endif  // TSI_OPENSSL_ALPN_SUPPORT
   return absl::OkStatus();
 }
 
diff --git a/src/core/tsi/ssl_transport_security.cc b/src/core/tsi/ssl_transport_security.cc
index 7c6ba7c5ecb0e..1cf73b29d372d 100644
--- a/src/core/tsi/ssl_transport_security.cc
+++ b/src/core/tsi/ssl_transport_security.cc
@@ -73,13 +73,6 @@
 #define TSI_SSL_MAX_PROTECTED_FRAME_SIZE_LOWER_BOUND 1024
 #define TSI_SSL_HANDSHAKER_OUTGOING_BUFFER_INITIAL_SIZE 1024
 
-// Putting a macro like this and littering the source file with #if is really
-// bad practice.
-// TODO(jboeuf): refactor all the #if / #endif in a separate module.
-#ifndef TSI_OPENSSL_ALPN_SUPPORT
-#define TSI_OPENSSL_ALPN_SUPPORT 1
-#endif
-
 // TODO(jboeuf): I have not found a way to get this number dynamically from the
 // SSL structure. This is what we would ultimately want though...
 #define TSI_SSL_MAX_PROTECTION_OVERHEAD 100
@@ -1282,9 +1275,7 @@ static tsi_result ssl_handshaker_result_extract_peer(
     X509_free(peer_cert);
     if (result != TSI_OK) return result;
   }
-#if TSI_OPENSSL_ALPN_SUPPORT
   SSL_get0_alpn_selected(impl->ssl, &alpn_selected, &alpn_selected_len);
-#endif  // TSI_OPENSSL_ALPN_SUPPORT
   if (alpn_selected == nullptr) {
     // Try npn.
     SSL_get0_next_proto_negotiated(impl->ssl, &alpn_selected,
@@ -1984,7 +1975,6 @@ static int ssl_server_handshaker_factory_servername_callback(SSL* ssl,
   return SSL_TLSEXT_ERR_NOACK;
 }
 
-#if TSI_OPENSSL_ALPN_SUPPORT
 static int server_handshaker_factory_alpn_callback(
     SSL* /*ssl*/, const unsigned char** out, unsigned char* outlen,
     const unsigned char* in, unsigned int inlen, void* arg) {
@@ -1994,7 +1984,6 @@ static int server_handshaker_factory_alpn_callback(
                               factory->alpn_protocol_list,
                               factory->alpn_protocol_list_length);
 }
-#endif  // TSI_OPENSSL_ALPN_SUPPORT
 
 static int server_handshaker_factory_npn_advertised_callback(
     SSL* /*ssl*/, const unsigned char** out, unsigned int* outlen, void* arg) {
@@ -2318,7 +2318,6 @@ tsi_result tsi_create_ssl_client_handshaker_factory_with_options(
                    << tsi_result_to_string(result);
         break;
       }
-#if TSI_OPENSSL_ALPN_SUPPORT
       CHECK(impl->alpn_protocol_list_length < UINT_MAX);
       if (SSL_CTX_set_alpn_protos(
               ssl_context, impl->alpn_protocol_list,
@@ -2168,7 +2156,6 @@ tsi_result tsi_create_ssl_client_handshaker_factory_with_options(
         result = TSI_INVALID_ARGUMENT;
         break;
       }
-#endif  // TSI_OPENSSL_ALPN_SUPPORT
       SSL_CTX_set_next_proto_select_cb(
           ssl_context, client_handshaker_factory_npn_callback, impl);
     }
@@ -2425,10 +2412,8 @@ tsi_result tsi_create_ssl_server_handshaker_factory_with_options(
           impl->ssl_contexts[i],
           ssl_server_handshaker_factory_servername_callback);
       SSL_CTX_set_tlsext_servername_arg(impl->ssl_contexts[i], impl);
-#if TSI_OPENSSL_ALPN_SUPPORT
       SSL_CTX_set_alpn_select_cb(impl->ssl_contexts[i],
                                  server_handshaker_factory_alpn_callback, impl);
-#endif  // TSI_OPENSSL_ALPN_SUPPORT
       SSL_CTX_set_next_protos_advertised_cb(
           impl->ssl_contexts[i],
           server_handshaker_factory_npn_advertised_callback, impl);
